{"version":3,"file":"content.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/parseuri/index.js","../../node_modules/has-cors/index.js","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/@socket.io/component-emitter/index.js","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/yeast/index.js","../../node_modules/parseqs/index.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/backo2/index.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/Content.svelte","../../src/content.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","<script context=\"module\">\n  import { io } from \"socket.io-client\";\n  const socket = io(\"http://localhost:3000\", {\n    autoConnect: false,\n  });\n  let activated = false;\n  chrome.runtime.onMessage.addListener(({ event, tabId }) => {\n    if (event === \"activated\") {\n      socket.connect();\n      socket.send(tabId);\n      activated = true;\n    } else if (event === \"deactivated\") {\n      socket.disconnect();\n    }\n  });\n</script>\n\n<main>\n  <img\n    class=\"fixed left-0 bottom-0\"\n    src=\"https://raw.githubusercontent.com/tonybaloney/vscode-pets/master/media/cat/black_idle_8fps.gif\"\n    alt=\"cat\"\n  />\n  {activated ? \"Activated\" : \"Not activated\"}\n</main>\n\n<style global lang=\"postcss\">\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n</style>\n","import Content from \"./Content.svelte\";\n\nconst app = new Content({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","append","target","node","appendChild","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","anchor","customElement","m","new_on_destroy","map","filter","mount_component","re","parts","str","src","indexOf","e","substring","replace","query","exec","uri","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","module","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","on","addEventListener","event","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","emit","args","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Transport","constructor","super","writable","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","prev","alphabet","seed","encode","num","encoded","Math","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","Polling","polling","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","Request","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","location","isSSL","protocol","request","assign","req","pollXhr","Socket","parseuri","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","clone","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","decodeString","BINARY_EVENT","BINARY_ACK","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","activated","element_src","insertBefore","insert","chrome","runtime","onMessage","addListener","tabId","$destroy","detaching","d","destroy_component","$on","$set","$$props","$$set","body"],"mappings":"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"}